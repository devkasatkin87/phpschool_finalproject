
server {
    listen *:80 default_server;
    server_name .myproject.ll;

    client_max_body_size 108M;

    access_log /var/log/nginx/application.access.log;


    root /application;

    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # serve static files directly
    location ~* \.(jpg|jpeg|gif|png|ico|html)$ {
        root /application/web/images;
        image_filter resize 150 -;
        expires 1d;
        add_header  Cache-Control "max-age=259200";
    }

    location ~* ^.*\.css$ {

        root /application;
        rewrite "^(.*)/[\da-z]{5}/(.*)" $1/$2;

        expires 24h;
        add_header  Cache-Control "max-age=259200";
    }

    location ~* ^.*\.js$ {

        root /application;
        rewrite "^(.*)/[\da-z]{5}/(.*)" $1/$2;

        expires 24h;
        add_header  Cache-Control "max-age=259200";
    }

    location ~ \.php$ {
        limit_req zone=one burst=5;
        fastcgi_index index.php;
        try_files $uri =404;
        client_max_body_size 64m;
        client_body_buffer_size 128k;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass backends;
        fastcgi_cache main;
        fastcgi_cache_key "$request_method|$scheme|$host|$uri";
        fastcgi_cache_use_stale updating error timeout invalid_header http_500 http_503;

        # ответы с кодом 200 кеширвоать на 30 секунд
        fastcgi_cache_valid 200 30s;
        # ответы с кодом 404 кеширвоать на 30 секунд
        fastcgi_cache_valid 404 1m;

        # позволяет игнорировать данные в кеше в случаи
        # наличия куки nocache или get-параметра nocache
        fastcgi_cache_bypass $cookie_nocache $arg_nocache;

        fastcgi_read_timeout 3600;

    }
}

upstream backends {
  server backend1:9000 weight=2;
  server backend2:9000 weight=4 max_fails=3 fail_timeout=30s;
}

server {
  listen *:80;

  server_name admin.myproject.ll;

  client_max_body_size 108M;

  access_log /var/log/nginx/application.access.log;


  root /application;

  index index.php index.html;

  location / {
      try_files $uri $uri/ /index.php?$args;
  }

  # serve static files directly
  location ~* \.(jpg|jpeg|gif|png|ico|html)$ {
      root /application/web/images;
      image_filter resize 150 -;
      expires 1d;
      add_header  Cache-Control "max-age=259200";
  }

  location ~* ^.*\.css$ {

      root /application;
      rewrite "^(.*)/[\da-z]{5}/(.*)" $1/$2;

      expires 24h;
      add_header  Cache-Control "max-age=259200";
  }

  location ~* ^.*\.js$ {

      root /application;
      rewrite "^(.*)/[\da-z]{5}/(.*)" $1/$2;

      expires 24h;
      add_header  Cache-Control "max-age=259200";
  }

  location ~ \.php$ {
      limit_req zone=one burst=5;
      fastcgi_index index.php;
      try_files $uri =404;
      client_max_body_size 64m;
      client_body_buffer_size 128k;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_pass backends;
      fastcgi_cache main;
      fastcgi_cache_key "$request_method|$scheme|$host|$uri";
      fastcgi_cache_use_stale updating error timeout invalid_header http_500 http_503;

      # ответы с кодом 200 кеширвоать на 30 секунд
      fastcgi_cache_valid 200 30s;
      # ответы с кодом 404 кеширвоать на 30 секунд
      fastcgi_cache_valid 404 1m;

      # позволяет игнорировать данные в кеше в случаи
      # наличия куки nocache или get-параметра nocache
      fastcgi_cache_bypass $cookie_nocache $arg_nocache;

      fastcgi_read_timeout 3600;

  }

}
