
 user nginx nginx;

 worker_processes 4;

 # [ debug | info | notice | warn | error | crit ]
 error_log /var/log/nginx/error.log info;

 events {
     # Максимальное количество соединений одного воркера
     worker_connections 1024;
 }

 http {

     # Указываем файл с mime-типами и указываем тип данных по-умолчанию
     include /etc/nginx/mime.types;
     default_type application/octet-stream;

     log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $bytes_sent '
                    '"$http_referer" "$http_user_agent" "$gzip_ratio" '
                    '"$request_time" "$upstream_response_time"';

     access_log /var/log/nginx/access.log main;

     # Отключить вывод версии nginx в ответе
     server_tokens off;

     # Метод отправки данных sendfile эффективнее чем read+write
     sendfile on;

     # Отправлять заголовки и начало файла в одном пакете
     tcp_nopush  on;
     tcp_nodelay on;

     gzip             on;
     gzip_min_length  1100;
     gzip_buffers     4 8k;
     gzip_types       text/plain application/xml;

     # Задаём путь по которому будет храниться кеш, выделяем 10 мегабайт
     fastcgi_cache_path /application/cache/nginx levels=1:2 keys_zone=main:10m;
     fastcgi_cache_key "$scheme$request_method$host$request_uri";

     # Задаёт параметры зоны разделяемой памяти,
     # где ключем выступает ip-адрес,
     # ограничение на скорость обработки запросов
     # равно 10 запросов в секунду с одного ip
     limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

     include /etc/nginx/conf.d/*.conf;
     include /application/config/myproject.conf;
 }
